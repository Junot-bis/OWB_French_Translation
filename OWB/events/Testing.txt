add_namespace = test_event
country_event = {
	id = test_event.1
	title = test_event.1.t
	desc = test_event.1.d
	picture = GFX_report_event_fascist_speech
	is_triggered_only = yes
	option = {
		name = test_event.1.a
	}
}

# instant 2 infrastructure in every state
country_event = {
	id = test_event.2
	title = test_event.2.t
	desc = test_event.2.d
	picture = GFX_report_event_fascist_speech
	is_triggered_only = yes
	option = {
		name = test_event.2.a
		every_state = {
			add_building_construction = { type = infrastructure level = 2 instant_build = yes }
		}
	}
}

# instant 10000 manpower in every country
country_event = {
	id = test_event.3
	title = test_event.3.t
	desc = test_event.3.d
	picture = GFX_report_event_fascist_speech
	is_triggered_only = yes
	option = {
		name = test_event.3.a
		every_country = {
			add_manpower = 10000
		}
	}
}
country_event = {
	id = test_event.4
	title = test_event.4.t
	desc = test_event.4.d
	picture = GFX_report_event_fascist_speech
	is_triggered_only = yes
	option = {
		name = test_event.4.a
		every_state = {
			decimate_half_all_industry = yes
		}
	}
}
country_event = {
	id = test_event.5
	title = test_event.5.t
	desc = test_event.5.d
	picture = GFX_report_event_fascist_speech
	is_triggered_only = yes
	option = {
		name = test_event.5.a
		every_state = {
			undecimate_half_all_industry = yes
		}
	}
}
country_event = {
	id = test_event.6
	title = test_event.6.t
	desc = test_event.6.d
	picture = GFX_report_event_fascist_speech
	is_triggered_only = yes
	option = {
		name = test_event.6.a
		210 = {
			set_border_war = yes
		}
		307 = {
			set_border_war = yes
		}
		171 = {
			set_border_war = yes
		}
		161 = {
			set_border_war = yes
		}
	}
}
country_event = {
	id = test_event.7
	title = test_event.7.t
	desc = test_event.7.d
	picture = GFX_report_event_fascist_speech
	is_triggered_only = yes
	option = {
		name = test_event.7.a
		# create a wargoal and add cores on any nation who invades and annexes the original wargoal target
		if = {
			limit = {
				any_state = {
					AND = {
						is_core_of = TWO
						NOT = { is_controlled_by = TWO }
					}
				}
			}
			every_country = {
				limit = {
					any_owned_state = {
						is_core_of = TWO
					}
				}
				every_state = {
					limit = {
						is_core_of = TWO
					}
					add_core_of = ROOT
				}
				ROOT = {
					create_wargoal = { type = annex_everything target = PREV }
				}
			}
		}
	}
	option = {
		name = test_event.7.b
	}
}
#
country_event = {
	id = test_event.8
	title = test_event.8.t
	desc = test_event.8.d
	picture = GFX_report_event_fascist_speech
	is_triggered_only = yes
	option = {
		name = test_event.7.a
		load_oob = settlerpersonalbodyguard
		ROOT = {
			capital_scope = {
				create_unit = {
					division = "name = \"Personal Bodyguard\" division_template = \"Personal Bodyguard\" start_experience_factor = 0.6"
					owner = ROOT
				}
			}
		}

		add_manpower = 300
	}
	option = {
		name = test_event.8.b
		save_event_target_as = unit_spawn_nation
		ROOT = {
			capital_scope = {
				create_unit = {
					division = "name = \"Personal Bodyguard\" division_template = \"NCR Troopers\" start_experience_factor = 0.6"
					owner = NCR
				}
			}
		}
	}
}
# generate ACE
country_event = {
	id = test_event.9
	title = test_event.9.t
	desc = test_event.9.d
	picture = GFX_report_event_fascist_speech
	is_triggered_only = yes
	# male ACE
	option = {
		name = test_event.9.a
		add_ace = { name = "MALE" surname = "ACE" callsign = "**TESTING**" type = fighter_genius is_female = no }
	}
	# female ACE
	option = {
		name = test_event.9.a
		add_ace = { name = "FEMALE" surname = "ACE" callsign = "**TESTING**" type = fighter_genius is_female = yes }
	}
}
# generate random troop
country_event = {
	id = test_event.10
	title = test_event.10.t
	desc = test_event.10.d
	picture = GFX_report_event_fascist_speech
	is_triggered_only = yes
	# male ACE
	option = {
		name = test_event.10.a
		revolt_load_oobs = yes
		revolt_spawn_random_troop = yes
	}
}
# generate random troop
country_event = {
	id = test_event.11
	title = test_event.11.t
	desc = test_event.11.d
	picture = GFX_report_event_fascist_speech
	is_triggered_only = yes
	# male ACE
	option = {
		name = test_event.11.a
		revolt_release_all_countries_with_cores = yes
	}
}
# test recursive unit generation
country_event = {
	id = test_event.12
	title = test_event.12.t
	desc = test_event.12.d
	picture = GFX_report_event_fascist_speech
	is_triggered_only = yes
	# male ACE
	option = {
		name = test_event.12.a
		set_variable = {
			revolt_this_country_divisions_to_spawn = 10
		}
		revolt_setup_fire_one_country = yes
	}
}

# generate random troop while forcing just militia spawns
country_event = {
	id = test_event.13
	title = test_event.13.t
	desc = test_event.13.d
	picture = GFX_report_event_fascist_speech
	is_triggered_only = yes
	# male ACE
	option = {
		name = test_event.11.a
		revolt_force_spawn_broken_coast = yes
		DRE = {
			set_country_flag = revolt_country_to_revolt@PREV
		}
		revolt_setup_fire = yes
	}
}
# test if you can add/subtract manpower from states (
country_event = {
	id = test_event.14
	title = test_event.14.t
	desc = test_event.14.d
	picture = GFX_report_event_fascist_speech
	is_triggered_only = yes
	# male ACE
	option = {
		name = test_event.14.a
		345 = {
			add_manpower = 500
		}
	}
}
# test if you can add/subtract manpower from states (
country_event = {
	id = test_event.15
	title = test_event.15.t
	desc = test_event.15.d
	picture = GFX_report_event_fascist_speech
	is_triggered_only = yes
	# male ACE
	option = {
		name = test_event.15.a
		every_state = {
			limit = {
				is_core_of = NAV
			}
			damage_building = {
				type = arms_factory
				damage = -1
			}
		}
	}
}
